<UserControl x:Class="Infologics.Medilogics.Billing.UIControls.Billing.UIServiceDeliveryDescription"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:UIElements="clr-namespace:Infologics.Medilogics.Resources.UIElementsLib;assembly=Infologics.Medilogics.Resources.UIElementsLib"
             xmlns:BillingCommand="clr-namespace:Infologics.Medilogics.Billing.UIControls.BillingNew.Command"
             xmlns:BillConverter="clr-namespace:Infologics.Medilogics.Billing.UIControls.BillingNew.Converter"
             xmlns:BillConvt="clr-namespace:Infologics.Medilogics.Billing.UIControls.Billing.Converter"
             xmlns:General="clr-namespace:Infologics.Medilogics.General.Control.Classes;assembly=Infologics.Medilogics.General.Control"
             x:Name="UCServiceDeliveryDescription"
             mc:Ignorable="d">
     <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Infologics.Medilogics.Resources.StyleResources;component/Resources/IconButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <General:ElementHacker x:Key="elementHacker"></General:ElementHacker>
            <BillConverter:DecimalPlaceConverter x:Key="decimalPlaceConverter"></BillConverter:DecimalPlaceConverter>
            <BillConverter:PriceConvertor x:Key="priceConvertor"></BillConverter:PriceConvertor>
            <BillConverter:BatchConvertor x:Key="BatchConvertor"></BillConverter:BatchConvertor>
            <BillConvt:PharmacyUnitSaleConverter x:Key="PharmacyUnitSalesConvertor"></BillConvt:PharmacyUnitSaleConverter>
            <BillConvt:BilledAmountUnitSaleConverter x:Key="BilledAmountUnitSaleConverter"></BillConvt:BilledAmountUnitSaleConverter>
            <LinearGradientBrush  x:Key="GridHeaderBack"
                                  EndPoint="0.5,1"
                                  StartPoint="0.5,0">
            <GradientStop Color="#FF3B3B3B" />
            <GradientStop Color="#FF454545"
                              Offset="1" />
            <GradientStop Color="#FF707070"
                              Offset="0.514" />
        </LinearGradientBrush>
        <Style x:Key="DataGridHeaderStyle"
                   TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
            <Setter Property="VerticalAlignment"
                        Value="Bottom" />
            <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
            <Setter Property="Foreground"
                        Value="White" />
            <Setter Property="FontSize"
                        Value="12" />
            <Setter Property="Background"
                        Value="{StaticResource GridHeaderBack}" />
        </Style>
            <Style x:Key="DataGridColumnHeaderGripper" TargetType="Thumb">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Padding="{TemplateBinding Padding}"
                        Background="Transparent">
                                <Rectangle HorizontalAlignment="Center"
                                    Width="1"
                                    Fill="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush  x:Key="BlackRinseBrush"
                                  EndPoint="0.5,1"
                                  StartPoint="0.5,0">
                <GradientStop Color="#FF3B3B3B" />
                <GradientStop Color="#FF454545"
                              Offset="1" />
                <GradientStop Color="#FF707070"
                              Offset="0.514" />
            </LinearGradientBrush>
            <Style  TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Height" Value="20" />
                <Setter Property="Height" Value="20"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="{StaticResource BlackRinseBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Grid>
                                <Border Name="HeaderBorder"
                                    BorderThickness="0"
                                    BorderBrush="{StaticResource BlackRinseBrush}"
                                    Background="{StaticResource BlackRinseBrush}"
                                    Padding="2,0,2,0">
                                    <ContentPresenter Name="HeaderContent"
                                      TextElement.Foreground="White"
                                      Margin="0,0,0,1"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Thumb x:Name="PART_HeaderGripper"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,-9,0"
                                    Style="{StaticResource DataGridColumnHeaderGripper}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<Style  x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Name="DataGridCellBorder">
                            <TextBlock Background="Transparent"
                                           Foreground="Black"
                                           TextWrapping="Wrap"
                                           TextTrimming="CharacterEllipsis"                                           
                                           Height="18"
                                           Width="150">
                                    <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}"
                                                      ContentTemplate="{TemplateBinding Property=ContentControl.Content}">                                     
                                    </ContentPresenter>
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
        </Style>-->
            <Style x:Key="ColumnRightAlignment" TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            
          
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="12"/>
        </Grid.RowDefinitions>
        <DataGrid  VirtualizingStackPanel.IsVirtualizing="False"
                   VerticalScrollBarVisibility="Auto"
                   HorizontalScrollBarVisibility="Auto"
                   x:Name="grdDeliveryDescription"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Grid.Row="0" 
                   SelectionMode="Single"    
                   SelectionUnit="Cell" 
                   AutoGenerateColumns="False" 
                   Margin="2,0,2,0"
                   CanUserAddRows="False"  
                   VerticalGridLinesBrush="LightGray"
                   HorizontalGridLinesBrush="LightGray"
                   RowHeight="24"
                   CanUserResizeColumns="False" 
                   CanUserResizeRows="False"
                   ItemsSource="{Binding Path=BillData/INV_PAT_BILLING,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,NotifyOnSourceUpdated=True}"
                   IsReadOnly="True">
            <DataGrid.RowStyle>
            <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>                       
                        <!--Narcotic medicine-->
                        <DataTrigger Binding="{Binding Path=IS_NARCOTIC_DRUG}"
                                     Value="1">
                            <Setter Property="Foreground" Value="Violet"></Setter>
                        </DataTrigger>  
                        <!--need approval and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="1"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="LightGreen"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--Exclusion and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding INCEXLCSTATUS}" Value="0"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Cyan"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--expired-->
                        <DataTrigger Binding="{Binding Path=NEAREXPIRY}"
                                     Value="1">
                            <Setter Property="Background" Value="Red"></Setter>
                        </DataTrigger>
                        <!--service-billed, pharmacy-Dispensed--> 
                        <DataTrigger Binding="{Binding Path=IS_DISPENSE}"
                                     Value="1">
                            <Setter Property="Background" Value="Orange"></Setter>
                        </DataTrigger>
                        <!--service-billed, pharmacy-Dispensed-->
                        <DataTrigger Binding="{Binding Path=ISCASHIERREMOVED}"
                                     Value="1">
                            <Setter Property="Background" Value="Gray"></Setter>
                        </DataTrigger>
                        
                        <!--waiting for approval and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="2"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Pink"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--waiting for approval and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="3"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Pink"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--waiting for approval and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="4"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Pink"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--Approved and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="5"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Green"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--rejected and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="6"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Yellow"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--resend and visit mode checking-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="8"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Pink"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--waiting for approval->selfpay , need approval->selfpay, exclusion<->inclusion, and visit mode checking--> 
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IS_EDITED}" Value="1"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Lavender"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--if scheme excluded service is approved by PBM-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="5"/>
                                <Condition Binding="{Binding IS_EDITED}" Value="1"/>
                                <Condition Binding="{Binding INCEXLCSTATUS}" Value="1"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Green"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--Stock available-->
                        <DataTrigger Binding="{Binding Path=IS_STOCK_EXIST}"
                                     Value="1">
                            <Setter Property="Background" Value="LightCoral"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IS_STOCK_EXIST}"
                                     Value="2">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </DataTrigger>
                        <!--need approval not checked-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="-1"/>
                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Cyan"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=IS_OMNICELL_ITEM}"
                                     Value="1">
                            <Setter Property="Foreground" Value="#4B0082"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
            </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                 <!--1-->
                
                <!--17-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="S"></TextBlock>
                            <!--<UIElements:giCheckBox
                                            Content="S"
                                            Width="30"
                                            Click="chkCommonSale_Click">
                            </UIElements:giCheckBox>-->
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <UIElements:giCheckBox Width="auto"
                                                   Name="chkSave"
                                                   HorizontalAlignment="Left"
                                                   HorizontalContentAlignment="Left"
                                                   Click="btnSale_Click"><!--IsChecked="{Binding ISSALE}"-->
                                <UIElements:giCheckBox.Style>
                                    <Style>
                                        <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True"></Setter>
                                        <Setter Property="UIElements:giCheckBox.IsChecked" Value="{Binding ISSALE}"></Setter>
                                        <!--<Setter Property="UIElements:giCheckBox.Visibility" Value="Visible"></Setter>-->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding APPROVAL_STATUS}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding APPROVAL_STATUS}" Value="2">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding APPROVAL_STATUS}" Value="3">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding APPROVAL_STATUS}" Value="4">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_STOCK_EXIST}" Value="2">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>                                          
                                            <!--<DataTrigger Binding="{Binding APPROVAL_STATUS}" Value="6">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                                <Setter Property="UIElements:giCheckBox.IsChecked" Value="False" />
                                            </DataTrigger> Bug ID 22200-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding APPROVAL_STATUS}" Value="6"/>
                                                    <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                    <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                               <!-- <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                                <Setter Property="UIElements:giCheckBox.IsChecked" Value="False" />-->
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding APPROVAL_STATUS}" Value="7">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding INV_MAST_SERVICE_ID}" Value="{x:Null}">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_EDITED}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                                <Setter Property="UIElements:giCheckBox.IsChecked" Value="True" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding VALIDATION_STATUS}" Value="-1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ISCASHIERREMOVED}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger>
                                            <!--<DataTrigger Binding="{Binding IS_SALE_ENABLE}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>-->
                                            <DataTrigger Binding="{Binding IS_APPROVED}" Value="0">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CONSUMPTION_STATUS}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger> 
                                            <DataTrigger Binding="{Binding VERIFICATION_SAVE_ENABLE}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MATERIAL_TYPE}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MATERIAL_TYPE}" Value="2">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MATERIAL_TYPE}" Value="3">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger>
                                        </Style.Triggers> 
                                    </Style>
                                </UIElements:giCheckBox.Style>
                            </UIElements:giCheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="clnVerification"
                                        Header="V">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="V"></TextBlock>
                            <!--<UIElements:giCheckBox
                                            Name="chkVerification"
                                            Content="V"
                                            Width="30"                                           
                                            Click="chkVerification_Click"></UIElements:giCheckBox>-->
                        </DataTemplate>
                        <!--IsEnabled="{Binding EnableVerification}"-->
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <UIElements:giCheckBox Width="auto"
                                                   IsChecked="{Binding ISVERIFICATION}"
                                                   HorizontalContentAlignment="Left"
                                                   HorizontalAlignment="Left"
                                                   Click="btnIsverification_Click">
                                <UIElements:giCheckBox.Style>
                                    <Style>
                                        <Setter Property="UIElements:giCheckBox.Visibility" Value="Collapsed"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                            <!--<DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.Visibility" Value="Collapsed" />
                                            </DataTrigger>-->
                                            <DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding INV_MAST_SERVICE_ID}" Value="{x:Null}">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UIElements:giCheckBox.Style>
                            </UIElements:giCheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>
                <DataGridTemplateColumn 
                    Header="L"
                    x:Name="clnLabel">                   
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <UIElements:giCheckBox Width="auto"
                                                   IsChecked="{Binding ISLABEL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"                                                   
                                                   HorizontalAlignment="Left"
                                                    Click="btnLabel_Click"
                                                   HorizontalContentAlignment="Left">

                                <UIElements:giCheckBox.Style>
                                    <Style>
                                        <Setter Property="UIElements:giCheckBox.IsEnabled" Value="True"></Setter>
                                        <!--<Setter Property="UIElements:giCheckBox.Visibility" Value="Visible"></Setter>-->
                                        <Style.Triggers>
                                            <!--<DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.Visibility" Value="Collapsed" />
                                            </DataTrigger>-->
                                            <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UIElements:giCheckBox.Style>

                            </UIElements:giCheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="S#">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SL_NO}"
                                     ToolTip="{Binding SL_NO}"
                                     VerticalAlignment="Stretch"
                                     HorizontalAlignment="Left"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn 
                    Header=" " Width="20">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <UIElements:giButton Command="{x:Static BillingCommand:BillingCommands.EditService}"                                                 
                                                 ToolTip="Edit"                                                 
                                                 CommandParameter="{Binding}">
                                <Image Source="{DynamicResource Edit}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch"
                                               Height="18"
                                               Width="18" />
                                <UIElements:giButton.Style>
                                    <Style  BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type UIElements:giButton}">
                                        <Setter Property="UIElements:giButton.IsEnabled"
                                                Value="True"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_STOCK_EXIST}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_STOCK_EXIST}" Value="2">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_EDITED}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ISCASHIERREMOVED}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ISORDERWISEBILL}" Value="1"/>
                                                    <Condition Binding="{Binding MATERIAL_TYPE}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ISORDERWISEBILL}" Value="1"/>
                                                    <Condition Binding="{Binding MATERIAL_TYPE}" Value="2"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ISORDERWISEBILL}" Value="1"/>
                                                    <Condition Binding="{Binding MATERIAL_TYPE}" Value="3"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IS_APPROVED_ENABLE}" Value="0">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IS_STOCK_EXIST}" Value="1"/>
                                                    <Condition Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1"/>
                                                    <Condition Binding="{Binding IS_VERIFIED}" Value="0"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="True" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IS_STOCK_EXIST}" Value="2"/>
                                                    <Condition Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1"/>
                                                    <Condition Binding="{Binding IS_VERIFIED}" Value="0"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="True" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <!--<MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SelectedVisitModeNew,RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}" Value="2"/>
                                                    <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="False"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>-->
                                        </Style.Triggers>
                                    </Style> 
                                </UIElements:giButton.Style>                                
                            </UIElements:giButton>
                            <!--Style="{DynamicResource IconButtonStyle}" <Style TargetType="UIElements:giButton"  BasedOn="{DynamicResource IconButtonStyle}">-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--2-->
                <DataGridTemplateColumn
                                        Header=" " Width="20">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <UIElements:giButton Click="btnAllDelete_clicked"
                                                 ToolTip="Delete"
                                                 Style="{StaticResource IconButtonStyle}">
                                <Image Source="{DynamicResource Delete}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch"
                                               Height="18"
                                               Width="18" />
                            </UIElements:giButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <UIElements:giButton Click="btnDelete_clicked"
                                                 ToolTip="Delete">
                                <Image Source="{DynamicResource Delete}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch"
                                               Height="18"
                                               Width="18" />
                                <UIElements:giButton.Style>
                                    <Style  BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type UIElements:giButton}">
                                        <Setter Property="UIElements:giButton.IsEnabled"
                                                Value="True"></Setter>
                                        <!--<Setter Property="UIElements:giButton.Visibility" Value="Visible"></Setter>-->
                                        
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ISCASHIERREMOVED}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UIElements:giButton.Style>
                            </UIElements:giButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Discontinue/Hold/Restart Status-->
                <DataGridTemplateColumn 
                    Header=" "  Width="20">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image>
                                <Image.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding DISCONTINUED_STATUS}" Value="0"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Discontinue" />
                                                <Setter Property="Image.Source" Value="{DynamicResource LogWithOutData}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding DISCONTINUED_STATUS}" Value="-1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Discontinue Cancelled" />
                                                <Setter Property="Image.Source" Value="{DynamicResource LogWithOutData}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding DISCONTINUED_STATUS}" Value="3"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Hold" />
                                                <Setter Property="Image.Source" Value="{DynamicResource LogWithOutData}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding DISCONTINUED_STATUS}" Value="4"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Restart" />
                                                <Setter Property="Image.Source" Value="{DynamicResource LogWithOutData}" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--Executed-->
                <DataGridTemplateColumn 
                    Header=" "  Width="20">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image>
                                <Image.Style>
                                    <Style>
                                        <Style.Triggers>                                            
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>                                                   
                                                    <Condition Binding="{Binding SERVICE_EXECUTED}" Value="0"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Service Pending" />
                                                <Setter Property="Image.Source" Value="{DynamicResource EMRIntervensionActionRequired}" />
                                            </MultiDataTrigger>                                            
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>                                                    
                                                    <Condition Binding="{Binding SERVICE_EXECUTED}" Value="1"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Sampled" />
                                                <Setter Property="Image.Source" Value="{DynamicResource EMRIntervensionAdded}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>                                                    
                                                    <Condition Binding="{Binding SERVICE_EXECUTED}" Value="2"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Image.ToolTip" Value="Service Executed" />
                                                <Setter Property="Image.Source" Value="{DynamicResource EMRIntervensionDocumented}" />
                                            </MultiDataTrigger>                                            
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>                           
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--3-->
                <DataGridTemplateColumn 
                    Header=" "  Width="20">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                            <Image Width="18"
                                              Height="18"
                                              Source="{DynamicResource STATOrder}"
                                              ToolTip="STAT Order"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Image.Visibility"
                                                        Value="Collapsed"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IS_STAT}"
                                                                 Value="1">
                                                <Setter Property="Image.Visibility"
                                                                Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <Image Width="18"
                                              Height="18"
                                              Source="{DynamicResource PharmacyUrgentOrder}"
                                              ToolTip="Urgent Order"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Image.Visibility"
                                                        Value="Collapsed"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IS_STAT}"
                                                                 Value="3">
                                                <Setter Property="Image.Visibility"
                                                                Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                                <Image Width="18"
                                              Height="18"
                                              Source="{DynamicResource DischargeOrder}"
                                              ToolTip="Discharge Medicine"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Image.Visibility"
                                                        Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IS_STAT}"
                                                                 Value="2">
                                                    <Setter Property="Image.Visibility"
                                                                Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn 
                    Header=" "  Width="20">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <!--parent icon is changed to child and child icon is changed to parent-->
                                <Image Width="18"
                                              Height="18"
                                              Source="{DynamicResource EMRAdditive-Child}"
                                              ToolTip="Fluid"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Image.Visibility"
                                                        Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IS_ADDITIVE}" Value="1"/>
                                                        <Condition Binding="{Binding IS_CHILD_ITEM}" Value="{x:Null}"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Image.Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Image Width="18"
                                              Height="18"
                                              Source="{DynamicResource EMRAdditive}"
                                              ToolTip="Additive"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Image.Visibility"
                                                        Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IS_ADDITIVE}" Value="1"/>
                                                        <Condition Binding="{Binding IS_CHILD_ITEM}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Image.Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--4-->
                <DataGridTemplateColumn 
                    Header="Code"  Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="BarCode" Width="100" 
                                     VerticalAlignment="Stretch"
                                     HorizontalAlignment="Left"
                                     HorizontalContentAlignment="Left"
                                     KeyDown="BarCode_KeyDown"
                                     MaxLength="50">                              
                                <TextBox.Style><!--ToolTip="{Binding Code}"-->
                                    <Style>
                                        <Setter Property="TextBox.IsEnabled" Value="True"></Setter>
                                        <Setter Property="TextBox.Text" Value="{Binding BARCODE}"></Setter>
                                        <Style.Triggers>
                                            
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IS_DISPENSE}" Value="1"/>
                                                    <Condition Binding="{Binding BARCODE}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="TextBox.IsEnabled" Value="False" />
                                                <Setter Property="TextBox.Text" Value="{Binding CPT_CODE}"></Setter>
                                            </MultiDataTrigger>
                                            
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SERVICE_TYPE}" Value="1"/>
                                                    <Condition Binding="{Binding BARCODE}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="TextBox.IsEnabled" Value="False" />
                                                <Setter Property="TextBox.Text" Value="{Binding CPT_CODE}"></Setter>
                                            </MultiDataTrigger>
                                            
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SERVICE_TYPE}" Value="3"/>
                                                    <Condition Binding="{Binding BARCODE}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="TextBox.IsEnabled" Value="False" />
                                                <Setter Property="TextBox.Text" Value="{Binding CPT_CODE}"></Setter>
                                            </MultiDataTrigger>
                                            
                                            <!--<MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                    <Condition Binding="{Binding BARCODE}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="TextBox.IsEnabled" Value="false" />
                                                <Setter Property="TextBox.Text" Value="{Binding CPT_CODE}"></Setter>
                                            </MultiDataTrigger>-->
                                            
                                            <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                <Setter Property="TextBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="1">
                                                <Setter Property="TextBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="3">
                                                <Setter Property="TextBox.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="4">
                                                <Setter Property="TextBox.IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--5-->
                <DataGridTemplateColumn 
                    Header="Description" Width="200">
                    <DataGridTemplateColumn.CellTemplate>                       
                        <DataTemplate>
                            <TextBlock Text="{Binding NAME}" 
                                       ToolTip="{Binding NAME}"
                                       Width="200"
                                       TextAlignment="Left"
                                       MouseLeftButtonDown="txt_click"
                                       VerticalAlignment="Stretch"                                       
                                       HorizontalAlignment="Left">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--6-->
                <DataGridTemplateColumn x:Name="clnMenu"
                    Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Menu Name="mnuOptions"
                                      Width="Auto"
                                      Height="20"
                                      Background="Transparent"
                                      IsHitTestVisible="True"                                      
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      MouseEnter="mnuOptions_MouseEnter"
                                      PreviewMouseDown="mnuOptions_PreviewMouseDown">
                                    <!--<Menu.Style>
                                        <Style>
                                            <Setter Property="Menu.Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4"/>
                                                        <Condition Binding="{Binding  Path=IsVisible,ElementName=chkVerification}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Menu.Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Menu.Style>-->
                                    <MenuItem Background="Transparent">
                                        <MenuItem.Header>
                                            <Image Source="{DynamicResource Tree}" 
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                               Height="12" Width="12"/>
                                        </MenuItem.Header>
                                        <MenuItem.BitmapEffect>
                                            <DropShadowBitmapEffect/>
                                        </MenuItem.BitmapEffect>
                                        <MenuItem Header="{Binding Path=INCO_MAST_NAME}" FontWeight="Bold" ToolTip="Location">
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsFromPharmacyPanel, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}" Value="True">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <!--Command="cl:Commands.NormalPreview"
                                      CommandParameter="{Binding}"-->
                                        <MenuItem Header="View Drug Info" 
                                                  Click="MenuDrugDetail">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding INV_MAST_SERVICE_ID}"  Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem><!--<MenuItem Header="Order Info (Summary View including Diagnosis)"
                                                  Click="menuOrderInfo">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>-->
                                        
                                        <!--<MenuItem Header="MAR view (Medication Administration Record view)"
                                                  Click="menuMARView">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>-->
                                        <MenuItem Header= "Edit Rx" 
                                                              Click="EditPharmacy_Click"
                                                              HorizontalAlignment="Left"
                                                  >
                                            <!--IsEnabled="{Binding Path=IS_EDITRX_REQUIRED, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}"-->
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Setter Property="MenuItem.IsEnabled" Value="False"></Setter>
                                                    <Style.Triggers>
                                                        
                                                        <!--<DataTrigger Binding="{Binding IS_EDITRX_REQUIRED, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}" Value="True">
                                                            <Setter Property="MenuItem.IsEnabled" Value="True" />
                                                        </DataTrigger>-->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                                <Condition Binding="{Binding IS_EDITRX_REQUIRED, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.IsEnabled"  Value="True"></Setter>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                            <Setter Property="MenuItem.IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                                <Condition Binding="{Binding SelectedVisitModeNew,RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}" Value="2"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility"  Value="Visible"></Setter>
                                                        </MultiDataTrigger>
                                                        <!--<DataTrigger Binding="{Binding SelectedVisitModeNew,RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}" Value="2">
                                                            <Setter Property="MenuItem.Visibility" Value="Visible" />
                                                        </DataTrigger>-->
                                                        <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding EMR_PAT_DTLS_INV_ORDER_ID}" Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                        </MenuItem>
                                        <MenuItem Header="Intervention" 
                                                  Click="menuIntervention"
                                                  HorizontalAlignment="Left">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding EMR_PAT_DTLS_INV_ORDER_ID}" Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>                                        
                                        <MenuItem Header="Discontinue/Hold/Restart"
                                                  Click="menuHold"
                                                  HorizontalAlignment="Left" Visibility="Collapsed">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <!--<MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding EMR_PAT_DTLS_INV_ORDER_ID}" Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding MATERIAL_TYPE}" Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding MATERIAL_TYPE}" Value="2">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding MATERIAL_TYPE}" Value="3">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>-->
                                        </MenuItem>
                                        <MenuItem Header="Patient Education" 
                                                  Click="menuPharmacyEducation" Visibility="Collapsed"
                                                  HorizontalAlignment="Left">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem x:Name="LabelPrint"
                                                  Header="Label Printing"
                                                  HorizontalAlignment="Left"
                                                  Click="LabelPrint_Clicks"
                                                  >
                                            
                                            <!--Command="{x:Static BillingCommand:BillingCommands.PharmacyLabelPrinting}"
                                                  CommandParameter="{Binding}">-->
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding INV_MAST_SERVICE_ID}"  Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IS_CHILD_ITEM}"  Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <!--<MenuItem Header="Remark"  
                                                  IsEnabled="False"
                                                  Click="MenuIssueRemark">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>-->
                                        <MenuItem Header="Pharmacy Note"
                                                  Click="Pharmacy_Note">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding INV_MAST_SERVICE_ID}"  Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Service Details"
                                                  Click="MenuDrugDetail">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                    <Style.Triggers>                                                       
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="4"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                       
                                        <MenuItem Header="Document Scan" 
                                                  Click="btn_ServiceScanClick">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ISCASHIERREMOVED}" Value="1"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding Path=SERVICE_TYPE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Value="11">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Allergy Reason"
                                                  Click="AllergyReason">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ALLERGY_REASON}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Exclusion to Inclusion"
                                                  Click="ExcltoIncl">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding INCEXLCSTATUS}" Value="0"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="-1"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="6"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Inclusion to Exclusion"
                                                  Click="IncltoExcl">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding INCEXLCSTATUS}" Value="1"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding Path=APPROVAL_STATUS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="-1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=APPROVAL_STATUS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=APPROVAL_STATUS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="2">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=APPROVAL_STATUS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="3">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=APPROVAL_STATUS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="4">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=APPROVAL_STATUS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="8">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Need Approval to Self-Pay"
                                                  Click="ApprToSelf">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="1"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Waiting for Approval to Self-Pay" 
                                                  Click="WaitToSelf">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="2"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="3"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="4"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>                                            
                                        </MenuItem>
                                        <MenuItem Header="Need Approval to Inclusion"
                                                  Click="NeedApprToIncl">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="1"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Waiting for Approval to Inclusion"
                                                  Click="WaitToIncl">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="2"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="3"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding APPROVAL_STATUS}" Value="4"/>
                                                                <Condition Binding="{Binding IS_COLORCODE_ENABLE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_EDITED}" Value="{x:Null}"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Remove Service"
                                                  Click="btnRemovServiceClick">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ISCASHIERREMOVED}" Value="0">
                                                            <Setter Property="MenuItem.Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding EMR_PAT_DTLS_INV_ORDER_ID}" Value="{x:Null}">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="4">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Add Service"
                                                  Click="btnAddServiceClick">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ISCASHIERREMOVED}" Value="1"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>

                                        <MenuItem Header="Change to zero charge" 
                                                  Click="MenuChangeZeroCharge">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Visible"/> 
                                                    <Style.Triggers>
                                                        <!--<MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=HasChangeToZeroCharge}" Value="True"/>
                                                                <Condition Binding="{Binding SERVICE_TYPE}" Value="1"/>
                                                                <Condition Binding="{Binding IS_FREE}" Value="0"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                        </MultiDataTrigger>-->
                                                        <DataTrigger Binding="{Binding Path=HasChangeToZeroCharge,ElementName=UCServiceDeliveryDescription, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=SERVICE_TYPE, UpdateSourceTrigger=PropertyChanged}" Value="11">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsFromPharmacy,ElementName=UCServiceDeliveryDescription, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>

                                        <MenuItem Header="Pharmacist Remarks/Comments"
                                                  Click="Pharmacy_RemarksOrComments">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Verification Cancel"
                                                  Click="Pharmacy_VerificationCancel">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1"/>
                                                                <Condition Binding="{Binding IS_VERIFIED}" Value="1"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding IS_CHILD_ITEM}" Value="1">
                                                            <Setter Property="MenuItem.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Change Sublocation"
                                                  Click="ChngSublocation">
                                            <MenuItem.BitmapEffect>
                                                <OuterGlowBitmapEffect GlowColor="Black"/>
                                            </MenuItem.BitmapEffect>
                                            <MenuItem.Style>
                                                <Style>
                                                    <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IS_OMNICELL_ITEM}" Value="1"/>
                                                                <Condition Binding="{Binding IS_SUB_OVERRIDE}" Value="0"/>
                                                                <Condition Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1"/>
                                                                <Condition Binding="{Binding IS_VERIFIED}" Value="0"/>                                                                
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </MenuItem>                                    
                                    <Menu.Style>
                                        <Style>
                                            <Setter Property="Menu.IsEnabled"
                                                Value="True"></Setter>                                            
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="Menu.IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="3">
                                                    <Setter Property="Menu.ToolTip" Value="Service Menu"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="4">
                                                    <Setter Property="Menu.ToolTip" Value="Pharmacy Menu"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding INV_MAST_SERVICE_ID}" Value="{x:Null}">
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_STOCK_EXIST}" Value="2">
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding VERIFICATION_BTN_VISIBILITY}" Value="1">
                                                    <Setter Property="UIElements:giButton.IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        </Menu.Style>
                                </Menu>
                            </StackPanel>
                        </DataTemplate> 
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--7-->
                <DataGridTemplateColumn x:Name="clnLocation"
                    Header="Location" 
                    MinWidth="150" Visibility="Collapsed">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding INCO_MAST_NAME}" 
                                       ToolTip="{Binding INCO_MAST_NAME}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       TextAlignment="Left">
                                
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--Excecution Center-->
                <DataGridTemplateColumn x:Name="clnCostCenter"
                    Header="Exec. Center" 
                    MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox 
                                      HorizontalAlignment="Stretch"        
                                      VerticalAlignment="Stretch"
                                      Name="cboCostCenter"
                                      IsReadOnly="True"
                                      KeyboardNavigation.TabNavigation="None"
                                      KeyboardNavigation.IsTabStop="False"                                    
                                      HorizontalContentAlignment="Left"
                                      Focusable="True"
                                      ItemsSource="{Binding Path=CostCenter,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2 ,Mode=FindAncestor}}"
                                      DisplayMemberPath="H_ADMIN_DEPT_DNAME"
                                      SelectedValuePath="H_ADMIN_DEPT_DEPTID"
                                      SelectionChanged="cboCostCenter_SelectionChanged"
                                      SelectedValue ="{Binding Path=COST_CENTER_ID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--8-->
                <DataGridTemplateColumn x:Name="clnQtyOD"
                    Header="Qty O-D" 
                    MinWidth="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ORDER_QTY}" 
                                       ToolTip="{Binding ORDER_QTY}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       TextAlignment="Left">

                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTemplateColumn
                    Header="Ref O-D" 
                    MinWidth="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{}" 
                                       ToolTip="{}">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                 <!--9-->
                <DataGridTemplateColumn x:Name="clnPropDate"
                    Header="Prop.Date" 
                    MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Text="{Binding PROPOSED_DATE,StringFormat=dd-MMM-yyyy HH:mm}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       TextAlignment="Left">
                                 <TextBlock.ToolTip>
                                <ToolTip>
                                    <TextBlock
                                         Text="{Binding PROPOSED_DATE,StringFormat=dd-MMM-yyyy HH:mm}"></TextBlock>
                                </ToolTip>
                            </TextBlock.ToolTip>
                     <!--<TextBlock.Style>
                         <Style>
                            <Setter Property="TextBlock.Text" Value="{Binding PROPOSED_DATE,StringFormat=dd-MM-yy HH:mm}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="4">
                                    <Setter Property="TextBlock.Text" Value="{Binding ENTRY_DATE,StringFormat=dd-MM-yy HH:mm}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>-->
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn x:Name="clnOrderDate"
                    Header="Ord.Date" 
                    MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Text="{Binding ENTRY_DATE,StringFormat=dd-MMM-yyyy HH:mm}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       TextAlignment="Left">
                            
                            <TextBlock.ToolTip>
                                <ToolTip>
                                    <TextBlock
                                         Text="{Binding ENTRY_DATE,StringFormat=dd-MMM-yyyy HH:mm}"></TextBlock>
                                </ToolTip>
                            </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--10-->
                <DataGridTemplateColumn x:Name="clnBatch"
                    Header="Batch"
                    Width="95"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                <ComboBox Grid.Row="2"
                                      Grid.Column="6"
                                      HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          IsReadOnly="True"
                                      Name="cboBatchOrUnit"
                                      KeyboardNavigation.TabNavigation="None"
                                      KeyboardNavigation.IsTabStop="False"
                                      HorizontalContentAlignment="Left"                                          
                                      Focusable="True"  
                                      DisplayMemberPath="BATCHNO"
                                      SelectedValuePath="BATCHNO"
                                      SelectionChanged="cbxSelection_Changed"
                                      SelectedValue ="{Binding Path=BATCHNO, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding Path=SelectedBatchOrUnit,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     >
                                    <!--SelectedIndex="{Binding Path=SelectedBatchOrUnitIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     
                                    -->
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource BatchConvertor}">
                                            <!--<Binding Path="INV_MAST_SERVICE_ID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"   />-->
                                            <!--<Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type UserControl},AncestorLevel=2}" Path="GridBatchOrUnit"/>-->
                                            <Binding Path="MEDICINE_CODE" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"   />
                                            <Binding Path="SUBLOCATION" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"   />
                                            <Binding Path="INV_MAST_SERVICE_ID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"   />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="ComboBoxItem">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding NEAREXPIRY}"
                                             Value="1">
                                                    <Setter Property="Background"
                                            Value="Blue"></Setter>
                                                    <Setter Property="ToolTip"
                                            Value="Near Expiry."></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                    <ComboBox.Style>
                                        <Style>
                                            <Setter Property="ComboBox.Visibility"
                                                Value="Visible"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_STOCK_EXIST}" Value="2">
                                                    <Setter Property="ComboBox.IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="1">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="3">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <TextBlock Text="{Binding BATCHNO}" 
                                       ToolTip="{Binding BATCHNO}"
                                       VerticalAlignment="Center"
                                       TextAlignment="Left">
                                    <TextBlock.Style>
                                        <Style>
                                            <Setter Property="TextBlock.Visibility"
                                                Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                                 <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  x:Name="clnExpDate"
                    Header="Exp. Date"
                    Width="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  
                                      Text="{Binding EXP_DATE,StringFormat=MM-yyy}" 
                                      ToolTip="{Binding EXP_DATE,StringFormat=MM-yyyy}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      TextAlignment="Left">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--11-->
                <DataGridTemplateColumn  x:Name="clnFrequency"
                    Header="Freq."
                    Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  
                                      Text="{Binding FREQUENCY}" 
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      TextTrimming="CharacterEllipsis"
                                      TextAlignment="Left">
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{Binding Path=FREQUENCY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  x:Name="clnduration"
                    Header="Dur."
                    Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  
                                      Text="{Binding DURATION}" 
                                      ToolTip="{Binding DURATION}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      TextAlignment="Left">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  x:Name="clnDose"
                    Header="Dose"
                    Width="40">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  
                                      Text="{Binding DOSE}" 
                                      ToolTip="{Binding DOSE}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      TextAlignment="Left">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--12-->
                <DataGridTemplateColumn 
                    Header="Qty" 
                    IsReadOnly="True"
                    Width="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <UIElements:giTextBox  
                                      x:Name="btnQty"
                                      Text="{Binding QTY}" 
                                      ToolTip="{Binding QTY}"                                      
                                      Width="35"
                                      Height="21"
                                      MaxLength="4"                                    
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Stretch"
                                      Validator="Integer"
                                      TextChanged="btnQty_TextChanged"
                                      HorizontalContentAlignment="Right"
                                      IsEnabled="{Binding ISEDIT_COUNT}">
                                    <UIElements:giTextBox.Style>
                                        <Style>
                                            <Setter Property="UIElements:giTextBox.Visibility"
                                                Value="Visible"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_APPROVED_ENABLE}" Value="0">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <!--<DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </UIElements:giTextBox.Style>
                                </UIElements:giTextBox  >
                                <TextBlock Text="{Binding QTY}" 
                                       ToolTip="{Binding QTY}"
                                        VerticalAlignment="Center"
                                       TextAlignment="Left">
                                    <TextBlock.Style>
                                        <Style>
                                            <Setter Property="TextBlock.Visibility"
                                                Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                                  <DataTrigger Binding="{Binding IS_APPROVED_ENABLE}" Value="0">
                                                 <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                                  <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                   <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <!--<DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Visible" />
                                                </DataTrigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--13-->
                <DataGridTemplateColumn x:Name="clnUnitofQty"
                    Header="Unit of Qty." 
                    Width="90"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                <ComboBox 
                                    HorizontalAlignment="Stretch"        
                                         VerticalAlignment="Stretch"
                                      Name="cboUnitSale"
                                    IsReadOnly="True"
                                      KeyboardNavigation.TabNavigation="None"
                                      KeyboardNavigation.IsTabStop="False"                                    
                                      HorizontalContentAlignment="Left"
                                      Focusable="True"
                                      DisplayMemberPath="TO_UNIT_NAME"
                                      SelectedValuePath="PH_UNIT_SALES_CONVERSION_ID"                                    
                                    SelectionChanged="cbxUnitType_Changed"
                                      SelectedIndex="{Binding Path=SelectedUnitTypeIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedValue ="{Binding Path=PH_UNIT_SALES_CONVERSION_ID, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemsSource>                                    
                                        <MultiBinding Converter="{StaticResource PharmacyUnitSalesConvertor}">                                          
                                            <Binding Path="INV_MAST_SERVICE_ID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"   />
                                            <!-- SelectionChanged="cbxUnitType_Changed"<Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type UserControl},AncestorLevel=2}" Path="PharamacyUnitSalesGrid"/>-->
                                            <!--<Binding Source="{StaticResource elementHacker}" Path="Element.SelectedPharmacyUnitType"/>-->
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                    <ComboBox.Style>
                                        <Style>
                                            <Setter Property="ComboBox.Visibility"
                                                Value="Visible"></Setter>
                                            <Setter Property="ComboBox.IsEnabled"
                                                Value="True"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_APPROVED_ENABLE}" Value="0">
                                                    <Setter Property="ComboBox.IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="1">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SERVICE_TYPE}" Value="3">
                                                    <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <!--<DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Collapsed" />
                                                </DataTrigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>                               
                                <TextBlock Text="{Binding SALES_UNIT_NAME}" 
                                       ToolTip="{Binding SALES_UNIT_NAME}"
                                        VerticalAlignment="Center"
                                       TextAlignment="Left">
                                    <TextBlock.Style>
                                        <Style>
                                            <Setter Property="TextBlock.Visibility"
                                                Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IS_DISPENSE}" Value="1">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                                  <DataTrigger Binding="{Binding IS_CONSUMPTION}" Value="1">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                </DataTrigger>
                                                  <!--<DataTrigger Binding="{Binding IS_VERIFIED}" Value="1">
                                                    <Setter Property="UIElements:giTextBox.Visibility" Value="Visible" />
                                                </DataTrigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>               
            
                <!--<DataGridTemplateColumn x:Name="clnUnitofQty"
                    Header="Unit of Qty." 
                    Width="90">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SALES_UNIT_NAME}" 
                                       ToolTip="{Binding SALES_UNIT_NAME}"
                                        VerticalAlignment="Center"
                                       TextAlignment="Left">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <!--14-->
                <DataGridTemplateColumn 
                    Header="Price" 
                    Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Text="{Binding BASE_CHARGE,Converter={StaticResource priceConvertor}}"
                                       Width="50"
                                       Margin="-10,0,0,0"
                                       TextAlignment="Right"
                                       VerticalAlignment="Center"
                                       ToolTip="{Binding BASE_CHARGE,Converter={StaticResource priceConvertor}}">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                 <!--15-->
                <DataGridTemplateColumn 
                    Header="Value"     
                    x:Name="clnValue"
                    Width="70">                   
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Width="70"
                                       Margin="-10,0,0,0"
                                       VerticalAlignment="Center"
                                       TextAlignment="Right"
                                       ToolTip="{Binding NET,Converter={StaticResource decimalPlaceConverter}}"
                                       Text="{Binding NET,Converter={StaticResource decimalPlaceConverter}}"> 
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTemplateColumn 
                    Header="Adjustment"     
                    x:Name="clnAdjustment"
                    Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Width="70"
                                       Margin="-10,0,0,0"
                                       VerticalAlignment="Center"
                                       TextAlignment="Right"
                                       ToolTip="{Binding ADJUSTMENT,Converter={StaticResource decimalPlaceConverter}}"
                                       Text="{Binding ADJUSTMENT,Converter={StaticResource decimalPlaceConverter}}">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <DataGridTemplateColumn 
                    Header="Net"     
                    x:Name="clnNet"
                    Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Width="70"
                                       Margin="-10,0,0,0"
                                       VerticalAlignment="Center"
                                       TextAlignment="Right"
                                       ToolTip="{Binding NET_AMOUNT,Converter={StaticResource decimalPlaceConverter}}"
                                       Text="{Binding NET_AMOUNT,Converter={StaticResource decimalPlaceConverter}}">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn 
                    Header="Sponsor"     
                    x:Name="clnSponsor"
                    Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Width="70"
                                       Margin="-10,0,0,0"
                                       VerticalAlignment="Center"
                                       TextAlignment="Right"
                                       ToolTip="{Binding SPONSOR,Converter={StaticResource decimalPlaceConverter}}"
                                       Text="{Binding SPONSOR,Converter={StaticResource decimalPlaceConverter}}">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn 
                    Header="Patient"     
                    x:Name="clnPatientShare"
                    Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                       Width="70"
                                       Margin="-10,0,0,0"
                                       VerticalAlignment="Center"
                                       TextAlignment="Right"
                                       ToolTip="{Binding PATIENT_SHARE,Converter={StaticResource decimalPlaceConverter}}"
                                       Text="{Binding PATIENT_SHARE,Converter={StaticResource decimalPlaceConverter}}">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--16-->
                
                <DataGridTemplateColumn 
                    Header="Allergy Reason"  Width="200"
                    x:Name="clnAllergy">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Width="200" 
                                     Text="{Binding ALLERGY_REASON}" 
                                     ToolTip="{Binding ALLERGY_REASON}"
                                     VerticalAlignment="Center"
                                       TextAlignment="Left">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
           <TextBlock Text="{Binding Path=DrugDetails,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                   FontSize="11"
                   HorizontalAlignment="Stretch"
                   TextTrimming="WordEllipsis"
                   TextWrapping="NoWrap"
                   Grid.Row="1"
                      Foreground="Blue"
                   VerticalAlignment="Center">
            <TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
        </TextBlock>
            <Grid Grid.Row="2"
              Grid.Column="0"
              Margin="2,2,2,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>                    
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
                <UIElements:giCheckBox
                    Grid.Column="0"
                    IsChecked="{Binding Path=IsDispenseChecked}"
                    >
                <UIElements:giCheckBox.Style>
                    <Style>
                        <Setter Property="UIElements:giCheckBox.IsEnabled" Value="true"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="11">
                                <Setter Property="UIElements:giCheckBox.IsEnabled" Value="false" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </UIElements:giCheckBox.Style>
            </UIElements:giCheckBox>
                <Ellipse Height="10"
                         Grid.Column="1"
                         StrokeThickness="1"
                         Width="10"
                         Fill="Orange"
                         Margin="2">
                </Ellipse>
                <TextBlock Grid.Column="2"
                           VerticalAlignment="Center">
                     <TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Text" Value="Billed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="TextBlock.Text" Value="Dispensed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            <UIElements:giCheckBox
                    Grid.Column="3"
                    IsChecked="{Binding Path=IsRemoveUnWantedService}"
                IsEnabled="{Binding Path=IsPatient,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                <UIElements:giCheckBox.Style>
                    <Style>
                        <Setter Property="UIElements:giCheckBox.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                <Setter Property="UIElements:giCheckBox.Visibility" Value="Visible" />
                            </DataTrigger>
                            <!--<DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="11">
                                <Setter Property="UIElements:giCheckBox.Visibility" Value="Visible" />
                            </DataTrigger>-->
                        </Style.Triggers>
                    </Style>
                </UIElements:giCheckBox.Style>
            </UIElements:giCheckBox>
            <Ellipse Height="10"
                         Grid.Column="4"
                         StrokeThickness="1"
                         Width="10"
                         Fill="Gray"
                         Margin="2">
                <Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <TextBlock Grid.Column="5"
                       VerticalAlignment="Center"
                       Text="Removed Service">
                  <TextBlock.Style>
                    <Style>
                        <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                <Setter Property="TextBlock.Visibility" Value="Visible" />
                            </DataTrigger>
                             <!--<DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="11">
                                <Setter Property="UIElements:giCheckBox.Visibility" Value="Visible" />
                            </DataTrigger>-->
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Ellipse Height="10"
                         StrokeThickness="1"
                         Width="10"
                         Grid.Column="6"
                         Fill="Cyan"
                         Margin="2"></Ellipse>
                <TextBlock Margin="2"
                           Text="Exclusion"
                           Grid.Column="7"
                           VerticalAlignment="Center"></TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="8"
                     Fill="LightGreen"
                     Margin="2"></Ellipse>
            <TextBlock Margin="2"
                       Text="NA"
                       ToolTip="Need-Approval"
                       Grid.Column="9"
                       VerticalAlignment="Center"></TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="10"
                     Fill="Pink"
                     Margin="2">
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Waiting for Appr."
                       ToolTip="Waiting for Approval"
                       Grid.Column="11"
                       VerticalAlignment="Center">
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="12"
                     Fill="Green"
                     Margin="2">
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Approved"
                       Grid.Column="13"
                       VerticalAlignment="Center">
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="14"
                     Fill="Lavender"
                     Margin="2">
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Edited"
                       Grid.Column="15"
                       VerticalAlignment="Center">
            </TextBlock>            
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="16"
                     Fill="Yellow"
                     Margin="2">
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Rejected"
                       Grid.Column="17"
                       VerticalAlignment="Center">
            </TextBlock>           
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="18"
                     Fill="LightCoral"
                     Margin="2">
                <!--<Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>-->
            </Ellipse>
            <TextBlock Margin="0,2,2,2"
                       Text="No Stock"
                       Grid.Column="19"
                       VerticalAlignment="Center" HorizontalAlignment="Right" Width="48">
                 <!--<TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                              
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>-->
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="20"
                     Fill="Blue"
                     Margin="2">
                <!--<Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>-->
            </Ellipse>
            <TextBlock Margin="2"
                           Text="Near Expiry"
                           Grid.Column="21"
                           VerticalAlignment="Center">
                     <!--<TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>-->
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="22"
                     Fill="Red"
                     Margin="2">
                <!--<Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>-->
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Pres. Expired"
                       ToolTip="Prescription Expired"
                       Grid.Column="23"
                       VerticalAlignment="Center">
                    <!--<TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="3">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>-->
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="24"
                     Fill="Violet"
                     Margin="2">
                <Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Narcotic"
                       Grid.Column="25"
                       VerticalAlignment="Center">
                 <TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="26"
                     Fill="DarkGray"
                     Margin="2">
                <Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Invalid"
                       Grid.Column="27"
                       VerticalAlignment="Center">
                 <TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
            </TextBlock>
            <Ellipse Height="10"
                     StrokeThickness="1"
                     Width="10"
                     Grid.Column="28"
                     Fill="#4B0082"
                     Margin="2">
                <Ellipse.Style>
                    <Style>
                        <Setter Property="Ellipse.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                <Setter Property="Ellipse.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <TextBlock Margin="2"
                       Text="Omnicell Item"
                       Grid.Column="29"
                       VerticalAlignment="Center">
                 <TextBlock.Style>
                        <Style>
                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="TextBlock.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
            </TextBlock>
            <!--</StackPanel>-->
        </Grid>
        <Grid Grid.Row="3"
              Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" >

                <!--Previous Medications-->
                <UIElements:giButton Name="Previous_Medications"
                                                         Margin="2"
                                                         VerticalAlignment="Center" Height="20" Width="20"
                                                         ToolTip="Previous Dispensed Medications"
                                                         ToolTipService.ShowOnDisabled="True"
                                                         HorizontalAlignment="Left"
                                                       Command="{x:Static BillingCommand:BillingCommands.PrevMedication}"
                                                         CommandParameter="{Binding}">
                    <Image Source="{DynamicResource Remarks}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                    <UIElements:giButton.Style>
                        <Style TargetType="UIElements:giButton"
                                                   BasedOn="{StaticResource IconButtonStyle}">
                            <Setter Property="UIElements:giButton.Visibility"
                                                        Value="Collapsed"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="UIElements:giButton.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </UIElements:giButton.Style>
                </UIElements:giButton>
                <!--<UIElements:giLinkButton
                        VerticalAlignment="Center"
                        Content="Previous Medications"
                        HorizontalAlignment="Left"
                        ToolTipService.ShowOnDisabled="True"
                        ToolTip="Previous Medications"
                        Grid.Column="0"
                        Margin="2"
                        Command="{x:Static BillingCommand:BillingCommands.PrevMedication}"
                        Foreground="Blue">
                <UIElements:giLinkButton.Style>
                    <Style>
                        <Setter Property="UIElements:giLinkButton.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                <Setter Property="UIElements:giLinkButton.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </UIElements:giLinkButton.Style>
            </UIElements:giLinkButton>--> 
                <!--Verified Medications-->
                <UIElements:giButton Name="Verified_Medications"
                                                          Height="20" Width="20" Margin="2"
                                                         VerticalAlignment="Center"
                                                         ToolTip="Verified Medications"
                                                         ToolTipService.ShowOnDisabled="True"
                                                         HorizontalAlignment="Left"
                                                       Command="{x:Static BillingCommand:BillingCommands.VerifiedMedication}"
                                                         CommandParameter="{Binding}">
                    <Image Source="{DynamicResource Tick}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                    <UIElements:giButton.Style>
                        <Style TargetType="UIElements:giButton"
                                                   BasedOn="{StaticResource IconButtonStyle}">
                            <Setter Property="UIElements:giButton.Visibility"
                                                        Value="Collapsed"></Setter>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsFromPharmacy,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="true" />
                                        <Condition Binding="{Binding Path=SelectedVisitModeNew,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="2" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="UIElements:giButton.Visibility" Value="Visible" />
                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </UIElements:giButton.Style>
                </UIElements:giButton>
                <UIElements:giButton Name="Print_Prescription"
                                                          Margin="2"
                                                         VerticalAlignment="Center" Height="20" Width="20"
                                                         ToolTip="Print Prescription"
                                                         ToolTipService.ShowOnDisabled="True"
                                                         HorizontalAlignment="Left"
                                                       Command="{x:Static BillingCommand:BillingCommands.PrintPrescription}"
                                                         CommandParameter="{Binding}">
                    <Image Source="{DynamicResource Print}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                    <UIElements:giButton.Style>
                        <Style TargetType="UIElements:giButton"
                                                   BasedOn="{StaticResource IconButtonStyle}">
                            <Setter Property="UIElements:giButton.Visibility"
                                                        Value="Collapsed"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                    <Setter Property="UIElements:giButton.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </UIElements:giButton.Style>
                </UIElements:giButton>
                <!--<UIElements:giLinkButton
                        VerticalAlignment="Center"
                        Content="Print Prescription"
                        HorizontalAlignment="Left"
                        ToolTipService.ShowOnDisabled="True"
                        ToolTip="Print Prescription"
                        Grid.Column="1"
                        Margin="2"
                        Command="{x:Static BillingCommand:BillingCommands.PrintPrescription}"
                        Foreground="Blue">
                <UIElements:giLinkButton.Style>
                    <Style>
                        <Setter Property="UIElements:giLinkButton.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType,UpdateSourceTrigger=PropertyChanged}" Value="4">
                                <Setter Property="UIElements:giLinkButton.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </UIElements:giLinkButton.Style>
            </UIElements:giLinkButton>-->
                <UIElements:giLinkButton
                        VerticalAlignment="Center"
                        Content="Add Diagnosis"
                        HorizontalAlignment="Left"
                        ToolTipService.ShowOnDisabled="True"
                        ToolTip="To add/view diagnosis"
                        
                        Margin="2"
                        Command="{x:Static BillingCommand:BillingCommands.NonEncounterICD}"
                        Foreground="Blue">
                    <UIElements:giLinkButton.Style>
                        <Style>
                            <Setter Property="UIElements:giLinkButton.Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsNonConsultEncounter,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="UIElements:giLinkButton.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </UIElements:giLinkButton.Style>
                </UIElements:giLinkButton>
            </StackPanel>
            <!--<UIElements:giButton Margin="2"
                                 HorizontalAlignment="Left"
                                 Grid.Column="0"
                                 IsEnabled="{Binding Path=IsPrevMedicationEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                 Content="Previuos Medications"
                                 Command="{x:Static BillingCommand:BillingCommands.PrevMedication}"/>-->
            <!--<UIElements:giButton Margin="2"
                                 HorizontalAlignment="Left"
                                 Grid.Column="1"
                                 IsEnabled="{Binding Path=IsPrevMedicationEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                 Content="Print Prescription"
                                 Command="{x:Static BillingCommand:BillingCommands.PrintPrescription}"/>-->
            <TextBlock Text="Due Amount"
                       Margin="2" 
                           FontWeight="Bold"
                           Grid.Column="2"
                       Visibility="Collapsed"
                       VerticalAlignment="Center"/>
            <TextBlock Text=":"
                       Margin="2" 
                       Visibility="Collapsed"
                           FontWeight="Bold"
                           Grid.Column="3"
                       VerticalAlignment="Center"/>
            <UIElements:giTextBox Margin="2"
                                     VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  Foreground="Red"
                                  Visibility="Collapsed"
                                  Width="100"
                                  Text="{Binding Path=DueAmounts,Converter={StaticResource decimalPlaceConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=0}"
                                  IsReadOnly="True"
                                       Grid.Column="4"
                                  HorizontalContentAlignment="Right"/>
            <TextBlock Text="Total Value"
                       Margin="2" 
                           FontWeight="Bold"
                           Grid.Column="5"
                       VerticalAlignment="Center"/>
            <TextBlock Text=":"
                       Margin="2" 
                           FontWeight="Bold"
                           Grid.Column="6"
                       VerticalAlignment="Center"/>
            <UIElements:giTextBox Margin="2"
                                     VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"                                  
                                  Text="{Binding Path=TotalAmount,Converter={StaticResource decimalPlaceConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=0}"
                                  IsReadOnly="True"
                                       Grid.Column="7"
                                  HorizontalContentAlignment="Right"/>
            <TextBlock Text="Total Net"
                       Margin="2" 
                           FontWeight="Bold"
                       HorizontalAlignment="Right"
                           Grid.Column="8"
                       VerticalAlignment="Center"/>
            <TextBlock Text=":"
                       Margin="2" 
                           FontWeight="Bold"
                           Grid.Column="9"
                       VerticalAlignment="Center"/>
            <UIElements:giTextBox Margin="2"
                                  Text="{Binding Path=TotalNet,Converter={StaticResource decimalPlaceConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=0}"
                                  IsReadOnly="True"
                                    VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"   
                                      Grid.Column="10"
                                  HorizontalContentAlignment="Right"/>
            <TextBlock Text="To Be Collected"
                       Margin="2" 
                           FontWeight="Bold"
                       HorizontalAlignment="Right"
                           Grid.Column="11"
                       VerticalAlignment="Center"/>
            <TextBlock Text=":"
                       Margin="2" 
                           FontWeight="Bold"
                           Grid.Column="12"
                       VerticalAlignment="Center"/>
            <UIElements:giTextBox Margin="2"
                                  Text="{Binding Path=ToBeCollected,Converter={StaticResource decimalPlaceConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=0}"
                                  IsReadOnly="True"
                                    VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"   
                                      Grid.Column="13"
                                  HorizontalContentAlignment="Right"/>
            <UIElements:giButton Margin="2"
                                 Width="25"
                                 HorizontalAlignment="Left"
                                     Grid.Column="14"
                                 ToolTip="Other Charge"
                                 Command="{x:Static BillingCommand:BillingCommands.OtherCharge}"
                                 
                                 >
                <Image Source="{DynamicResource Tobecollected}"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Center"
                               Height="20"
                               Width="20"></Image>
                <UIElements:giButton.Style>
                    <Style  BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type UIElements:giButton}">
                        <Setter Property="UIElements:giButton.IsEnabled" Value="true"/>
                        <Style.Triggers>
                           
                            <!--<DataTrigger Binding="{Binding Path=IsPatient}" Value="false">
                                <Setter Property="UIElements:giButton.IsEnabled" Value="false"></Setter>
                            </DataTrigger>-->
                            <DataTrigger Binding="{Binding Path=SelectedServiceType}" Value="11">
                                <Setter Property="UIElements:giButton.IsEnabled" Value="false"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </UIElements:giButton.Style>
            </UIElements:giButton>
            <TextBlock Text="Adjustment"
                       Margin="2" 
                       HorizontalAlignment="Right"
                           FontWeight="Bold"
                             Grid.Column="15"
                       VerticalAlignment="Center"/>
            <TextBlock Text=":"
                       Margin="2" 
                           FontWeight="Bold"
                           Grid.Column="16"
                       VerticalAlignment="Center"/>
            <UIElements:giTextBox Margin="2"
                                        Grid.Column="17"
                                    VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"   
                                  Text="{Binding Path=TotalAdjustment,Converter={StaticResource decimalPlaceConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=0}"
                                  IsReadOnly="True"
                                  HorizontalContentAlignment="Right"/>
            <UIElements:giButton Margin="2"
                                 Width="25"
                                 HorizontalAlignment="Left"
                                 Grid.Column="18"
                                 ToolTip="Adjustment"
                                 Command="{x:Static BillingCommand:BillingCommands.LoadAdjustment}">
                <Image Source="{DynamicResource Adjustments}"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Center"
                               Height="20"
                               Width="20"></Image>
                <UIElements:giButton.Style>
                    <Style  BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type UIElements:giButton}">
                        <Setter Property="UIElements:giButton.IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsAdjustmentEnable,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="UIElements:giButton.IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsPatient}" Value="false">
                                <Setter Property="UIElements:giButton.IsEnabled" Value="false"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=SelectedServiceType}" Value="11">
                                <Setter Property="UIElements:giButton.IsEnabled" Value="false"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    </UIElements:giButton.Style>
               
            </UIElements:giButton>
            <!--IsEnabled="{Binding Path=IsAdjustmentEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"-->
        </Grid>
        <!--<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="2,2,2,15">

        </StackPanel>-->



        <!--Text="{Binding Path=0.00,Converter={StaticResource decimalPlaceConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=0}"-->
            <!--Command="{x:Static BillingCommand:BillingCommands.BillReceiptData}"-->
        
    </Grid>
</UserControl>
