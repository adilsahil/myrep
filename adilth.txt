<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:UIElements;assembly=UIElements">
    <!--<ResourceDictionary.MergedDictionaries >
        <ResourceDictionary Source="/Masters;component/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>-->
    
    <!-- NEwcheckbox Brush-->
    <RadialGradientBrush x:Key="BrushCheckBoxNormal">
        <GradientStop Color="#e5e6e7" Offset="0.0" />
        <GradientStop Color="#b7b8b9" Offset="1" />
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="BrushCheckBoxNormalBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="BrushCheckBoxSelected">
        <GradientStop Color="#00ff99" Offset="0.0" />
        <GradientStop Color="#00b06a" Offset="1" />
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="BrushCheckBoxMouseOver" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFDCDADA" Offset="0"/>
                <GradientStop Color="#CCC" Offset="1"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <!-- NEwcheckbox Brush-->
    
    <!--common-->
    <SolidColorBrush x:Key="BrushDisabledBorder" Color="LightGray"/>
    <SolidColorBrush x:Key="BrushDisabled" Color="#FFBABABA"/>
    <SolidColorBrush x:Key="Foreground40" Color="#FF404040"></SolidColorBrush>
    <SolidColorBrush x:Key="Foreground8C" Color="#FF8C8C8C"></SolidColorBrush>
    <SolidColorBrush x:Key="DisabledBorder" Color="LightGray" ></SolidColorBrush>
    <SolidColorBrush x:Key="ForegroundMandatory" Color="#FFFFCCE7"></SolidColorBrush>
    <SolidColorBrush x:Key="BrushElementTitle" Color="#FF231F20"/>
    <SolidColorBrush x:Key="BrushMandatory" Color="#FFFFCCE7" />
    <SolidColorBrush x:Key="Brush8C" Color="#FF8C8C8C"/>
    <!--common-->

    <!--new button Brush-->
    <FontFamily x:Key="Frutiger55Roman">./Fonts/#Frutiger55Roman</FontFamily>
    <FontFamily x:Key="Frutiger45Light">./Fonts/#Frutiger45-Light</FontFamily>
    <FontFamily x:Key="Frutiger65Bold">./Fonts/#Frutiger65</FontFamily>
    <!--new button Brush-->


    <!--To set background Image in button-->
    <Style TargetType="{x:Type Image}" x:Key="ButtonImageStyle">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsEnabled}"
                                 Value="False">
                <Setter Property="Opacity"
                                Value="0.5"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="BlueRinseBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF8DB3D8"/>
        <GradientStop Color="#FF25517C" Offset="1"/>
        <GradientStop Color="#FF5C89B7" Offset="0.509"/>
        <GradientStop Color="#FF3970A9" Offset="0.527"/>
        <!--<GradientStop Color="LimeGreen" />
        <GradientStop Color="LightGreen" Offset="1"/>
        <GradientStop Color="LimeGreen" Offset="0.509"/>
        <GradientStop Color="LightGreen" Offset="0.527"/> GridViewColumnHeader-->
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GreenRinseBrush" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="Black" Offset="0.0"/>
        <GradientStop Color="DarkGreen" Offset="0.80"/>
        <GradientStop Color="LightGreen" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush  x:Key="HeaderBackground"
                                  EndPoint="0.5,1"
                                  StartPoint="0.5,0">
        <GradientStop Color="#FF3B3B3B" />
        <GradientStop Color="#FF454545"
                              Offset="1" />
        <GradientStop Color="#FF707070"
                              Offset="0.514" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlackRinseBrushForGripper" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF3B3B3B" Offset="0"/>
        <GradientStop Color="#FF454545" Offset="0.50"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush  x:Key="BlackRinseBrush"
                                  EndPoint="0.5,1"
                                  StartPoint="0.5,0">
        <GradientStop Color="#FF3B3B3B" />
        <GradientStop Color="#FF454545"
                              Offset="1" />
        <GradientStop Color="#FF707070"
                              Offset="0.514" />
    </LinearGradientBrush>
    <!-- Listview Header-->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="{StaticResource BlackRinseBrushForGripper}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                        Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                    Width="1"
                                    Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- x:Key="GridViewColumnHeaderStyle"-->
    <Style  TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource HeaderBackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
                                    BorderThickness="0"
                                    BorderBrush="{StaticResource HeaderBackground}"
                                    Background="{StaticResource HeaderBackground}"
                                    Padding="2,0,2,0">
                            <ContentPresenter Name="HeaderContent"
                                      TextElement.Foreground="White"
                                      Margin="0,0,0,1"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,-9,0"
                                    Style="{StaticResource GridViewColumnHeaderGripper}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- List View HeadderEnd -->
    <!--x:Key="DataGridColumnHeaderGripper" -->

    <Style x:Key="DataGridColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                        Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                    Width="1"
                                    Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}" >

        <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />

    </Style>
    <!--x:Type DataGridColumnHeader-->
    <Style  TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource BlackRinseBrush}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
                                    BorderThickness="0"
                                    BorderBrush="{StaticResource BlackRinseBrush}"
                                    Background="{StaticResource BlackRinseBrush}"
                              
                                    Padding="2,0,2,0">
                            <ContentPresenter Name="HeaderContent"
                                             
                                      TextElement.Foreground="White"
                                      Margin="0,0,0,1"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,-9,0"
                                    Style="{StaticResource DataGridColumnHeaderGripper}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--checkbox style-->
    <Style  x:Key="{x:Type local:NewCheckBox}" TargetType="{x:Type local:NewCheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Margin" Value="2"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>-->
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NewCheckBox}">
                    <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border BorderThickness="2" 
                                        BorderBrush="Transparent" 
                                        CornerRadius="2"
                                        x:Name="outerBorder">
                                <Grid Width="13" Height="13" x:Name="grid">
                                    <Border x:Name="Border" 
                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                Background="{StaticResource BrushCheckBoxNormal}"
                                                CornerRadius="2" 
                                                BorderBrush="{StaticResource BrushCheckBoxNormalBorder}">
                                    </Border>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="2,0,0,0" 
                                              VerticalAlignment="Center" 
                                              RecognizesAccessKey="True"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="8pt"
                                              TextBlock.FontFamily="Arial"
                                              TextBlock.Foreground="Black"
                                              TextBlock.FontWeight="Bold"/>
                    </BulletDecorator>
                    <!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" 
                                        TargetName="outerBorder" 
                                        Value="{StaticResource BrushCheckBoxMouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" 
                                        TargetName="Border" 
                                        Value="{StaticResource BrushCheckBoxSelected}"/>
                            <Setter Property="BorderBrush" 
                                        TargetName="outerBorder" 
                                        Value="Transparent"></Setter>
                            <Setter Property="Effect" TargetName="Border">
                                <Setter.Value>
                                    <BlurEffect Radius="2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushDisabled}" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource BrushDisabledBorder}" />
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource BrushDisabled}"/>
                            <Setter Property="Grid.Height" TargetName="grid" Value="10"></Setter>
                            <Setter Property="Grid.Width" TargetName="grid" Value="10"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--new button-->
    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3 2">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShadowStyle">
        <Setter Property="Control.Foreground" Value="LightGray" />
    </Style>
    <Style x:Key="{x:Type local:NewButton}" TargetType="{x:Type local:NewButton}">
        <!--<Setter Property="Margin" Value="2"/>-->
        <Setter Property="FontFamily" Value="{StaticResource Frutiger65Bold}"/>
        <Setter Property="Foreground" Value="{StaticResource Foreground40}"/>
        <Setter Property="FontSize" Value="8pt"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinHeight" Value="23px"/>
        <!--<Setter Property="Width" Value="120px"/>-->
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                    <GradientStop Color="#FFEFEFEF" Offset="0.004"/>
                    <GradientStop Color="#FFCFCFCF" Offset="0.978"/>
                    <GradientStop Color="#FFD4D4D4" Offset="0.853"/>
                    <GradientStop Color="#FFECECEC" Offset="0.085"/>
                    <GradientStop Color="#FFDADADA" Offset="0.58"/>
                    <GradientStop Color="#FFE3E3E3" Offset="0.411"/>

                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type local:NewButton}">
                    <Border Name="border" 
                            KeyboardNavigation.DirectionalNavigation="Contained"
				BorderThickness="1"
				Padding="04,2" 
				BorderBrush="{StaticResource Foreground8C}" 
				CornerRadius="10" 
				Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" 
	                           VerticalAlignment="Center" Name="contentShadow" 
					           Style="{StaticResource ShadowStyle}"
                                              Content="{TemplateBinding Content}">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="1.0" Y="1.0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" 
                            VerticalAlignment="Center" Name="content"  Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter Property="Foreground" Value="#FF4788c8" />-->
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFE9E7E7" Offset="0.482"/>
                                        <GradientStop Color="#FFB0B0B0" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.488,0.971" StartPoint="0.488,-0.029">
                                        <GradientStop Color="#FF00FF99" Offset="0.375"/>
                                        <GradientStop Color="#FF00B06A" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.488,0.971" StartPoint="0.488,-0.029">
                                        <GradientStop Color="#FFFFCCE7" Offset="0.598"/>
                                        <GradientStop Color="#FFAD899C" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter TargetName="border" Property="Background" Value="#FFECEBE7"/>
                            <Setter Property="Foreground" Value="{StaticResource Foreground8C}" />
                        </Trigger>

                        <Trigger Property="RoundEdgeType" Value="None">
                            <Setter TargetName="border" Property="CornerRadius" Value="0"/>
                        </Trigger>
                        <!--LeftTop,
                       LeftBottom,
                       Left,
                       RightTop,
                       RightBottom,
                       Right,
                       Default-->
                        <Trigger Property="RoundEdgeType" Value="Left">
                            <Setter TargetName="border" Property="CornerRadius" Value="10,0,0,10"/>
                        </Trigger>
                        <Trigger Property="RoundEdgeType" Value="Right">
                            <Setter TargetName="border" Property="CornerRadius" Value="0,10,10,0"/>
                        </Trigger>
                        <Trigger Property="RoundEdgeType" Value="LeftTop">
                            <Setter TargetName="border" Property="CornerRadius" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="RoundEdgeType" Value="LeftBottom">
                            <Setter TargetName="border" Property="CornerRadius" Value="0,0,0,10"/>
                        </Trigger>
                        <Trigger Property="RoundEdgeType" Value="RightTop">
                            <Setter TargetName="border" Property="CornerRadius" Value="0,10,0,0"/>
                        </Trigger>
                        <Trigger Property="RoundEdgeType" Value="RightBottom">
                            <Setter TargetName="border" Property="CornerRadius" Value="0,0,10,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--new button-->


    <!--New Combo Box -->

    <Style x:Key="TitleDividingLineStyle" TargetType="{x:Type Separator}" >
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="1" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <!-- ToggleButton-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
                    Grid.ColumnSpan="2"
                    Background="Transparent"
                    CornerRadius="5"/>
            <Border Grid.Column="0"
                    CornerRadius="5" 
                    Margin="1"  />
            <Image Source="{DynamicResource ComboArrow}" 
                   x:Name="img"
                   Grid.Column="1" 
                   Stretch="Fill"
                   Width="15px"
                   Height="15px"
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Center"
                   Margin="2,0,3,5"/>
        </Grid>
    </ControlTemplate>
    <!-- Editable Combo TextBox -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" 
                Background="Transparent" />
    </ControlTemplate>
    <Style x:Key="{x:Type local:NewComboBox}" TargetType="{x:Type local:NewComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Margin" Value="3,3,3,3"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Height" Value="35px"/>
        <Setter Property="MaxHeight" Value="35px"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NewComboBox}">
                    <Border Name="Bd"
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch" 
                            Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5,5,5,5" >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="9" Color="#FF8C8C8C" ShadowDepth="0" />
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="20" x:Name="imgCol"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.RowSpan="3"
                                       Text="{TemplateBinding Title}"
                                       FontSize="8pt"
                                       FontFamily="{StaticResource Frutiger65Bold}"
                                       Foreground="{StaticResource BrushElementTitle}"
                                       FontWeight="Bold"
                                       Margin="8,0,0,2" 
                                       VerticalAlignment="Bottom" 
                                       x:Name="textBlock" />
                            <Separator Grid.Row="1" 
                                       Grid.Column="0" 
                                       x:Name="TextSeperator" 
                                       Style="{StaticResource TitleDividingLineStyle}"
                                       Opacity="0.35"
                                       HorizontalAlignment="Stretch"
                                       Visibility="Collapsed"/>

                            <ToggleButton Grid.Row="0"
                                          Grid.RowSpan="3"
                                          Name="ToggleButton" 
                                          Template="{StaticResource ComboBoxToggleButton}" 
                                          Grid.Column="1" 
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          VerticalAlignment="Bottom"/>

                            <ContentPresenter Grid.Row="2"
                                              Name="ContentSite"
                                              IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              TextBlock.FontSize="8pt"
                                              TextBlock.FontFamily="{StaticResource Frutiger65Bold}"
                                              TextBlock.Foreground="{StaticResource BrushElementTitle}"
                                              TextBlock.FontWeight="Bold"
                                              Margin="10,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Visibility="Visible"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Grid.Row="2"
                                     Template="{StaticResource ComboBoxTextBox}" 
                                     HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch" 
                                     Margin="8,0,0,0"
                                     Focusable="True" 
                                     FontSize="10pt"
                                     FontFamily="{StaticResource Frutiger65Bold}"
                                     Foreground="{StaticResource BrushElementTitle}"
                                     FontWeight="Bold"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=Bd}"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Margin="10"
                                      Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="White" 
                                            BorderThickness="1"
                                            BorderBrush="{TemplateBinding BorderBrush}" >
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="9" Color="#FF8C8C8C" ShadowDepth="0" />
                                        </Border.Effect>
                                        <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" 
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMandatory" Value="True">
                            <Setter Property="Effect" TargetName="Bd">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="9" Color="Black" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="Background" Value="#FFFFCCE7"></Setter>-->
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BrushMandatory}" ></Setter>
                            <Setter Property="Background" TargetName="DropDownBorder" Value="{StaticResource BrushMandatory}" ></Setter>

                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource BrushDisabled}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource BrushDisabled}"/>
                            <Setter Property="Foreground" 
                                    TargetName="textBlock" 
                                    Value="{StaticResource BrushDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="Margin" TargetName="textBlock" Value="10,2,0,0"/>
                            <Setter Property="Margin" TargetName="TextSeperator" Value="5,0,5,0"/>
                            <Setter Property="VerticalAlignment" TargetName="textBlock" Value="Top"/>
                            <Setter Property="FontFamily" TargetName="textBlock" Value="{StaticResource Frutiger65Bold}"/>
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource Brush8C}"/>
                            <Setter Property="FontSize" TargetName="textBlock" Value="7.5pt"/>
                            <Setter Property="Grid.RowSpan" TargetName="textBlock" Value="1"></Setter>
                            <Setter Property="Visibility" TargetName="TextSeperator" Value="Visible"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsValueSelected" Value="True">
                            <Setter Property="Margin" TargetName="textBlock" Value="10,2,0,0"/>
                            <Setter Property="Margin" TargetName="TextSeperator" Value="5,0,5,0"/>
                            <Setter Property="VerticalAlignment" TargetName="textBlock" Value="Top"/>
                            <Setter Property="FontFamily" TargetName="textBlock" Value="{StaticResource Frutiger65Bold}"/>
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource Brush8C}"/>
                            <Setter Property="FontSize" TargetName="textBlock" Value="7.5pt"/>
                            <Setter Property="Grid.RowSpan" TargetName="textBlock" Value="1"></Setter>
                            <Setter Property="Visibility" TargetName="TextSeperator" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!--New Combo Box -->

</ResourceDictionary>